<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:SyncFlow.Converters">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!-- Text Styles -->
    <Style x:Key="TitleTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="SubtitleTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="BodyTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- Color Theme (Dark) -->
    <SolidColorBrush x:Key="BackgroundPrimary" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="BackgroundSecondary" Color="#252526"/>
    <SolidColorBrush x:Key="BackgroundTertiary" Color="#2D2D2D"/>
    <SolidColorBrush x:Key="ForegroundPrimary" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ForegroundSecondary" Color="#CCCCCC"/>
    <SolidColorBrush x:Key="AccentPrimary" Color="#0078D4"/>
    <SolidColorBrush x:Key="AccentSecondary" Color="#60CDFF"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#333333"/>
    <SolidColorBrush x:Key="ProgressBarBackground" Color="#333333"/>
    
    <!-- Window and UI Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="#252526"/>
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="#CCCCCC"/>
    <SolidColorBrush x:Key="PrimaryButtonBrush" Color="#0078D4"/>
    <SolidColorBrush x:Key="SecondaryButtonBrush" Color="#2D2D2D"/>
    <SolidColorBrush x:Key="DangerButtonBrush" Color="#D13438"/>
    
    <!-- TextBlock Style -->
    <Style x:Key="ModernTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundPrimary}"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Base Button Style -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentSecondary}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentPrimary}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBrush}"/>
    </Style>

    <!-- Secondary Button Style -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource SecondaryButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <!-- Danger Button Style -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource DangerButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DangerButtonBrush}"/>
    </Style>

    <!-- Progress Bar Style -->
    <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
        <Setter Property="Height" Value="4"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"/>
                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"/>
                        <Border x:Name="PART_Indicator"
                                Background="{TemplateBinding Foreground}"
                                CornerRadius="2"
                                HorizontalAlignment="Left">
                            <Border.Width>
                                <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </Border.Width>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource BackgroundTertiary}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentSecondary}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentPrimary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource BackgroundTertiary}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentSecondary}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentPrimary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBox Style -->
    <Style x:Key="ModernListBox" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource BackgroundSecondary}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- ListBoxItem Style -->
    <Style x:Key="ModernListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border" 
                            Background="Transparent" 
                            BorderBrush="{StaticResource BorderBrush}" 
                            BorderThickness="0,0,0,1"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentPrimary}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundTertiary}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Animated Toggle Button Style -->
    <Style x:Key="AnimatedToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- Background Track -->
                        <Border
                            x:Name="BackgroundBorder"
                            Background="{DynamicResource SecondaryButtonBrush}"
                            CornerRadius="15"
                            Width="60"
                            Height="30"/>
                        
                        <!-- Thumb -->
                        <Border
                            x:Name="Thumb"
                            Background="White"
                            CornerRadius="13"
                            Width="26"
                            Height="26"
                            HorizontalAlignment="Left"
                            Margin="2,0,0,0">
                            <Border.RenderTransform>
                                <TranslateTransform x:Name="ThumbTransform" X="0"/>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ThumbTransform"
                                            Storyboard.TargetProperty="X"
                                            To="32"
                                            Duration="0:0:0.2"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#0078D4"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ThumbTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#2D2D2D"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

